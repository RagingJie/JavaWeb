<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.naruto.mybatis.mapper.EmpDynamicSQLMapper">

    <!--    <select id="getEmpByNameAndSalary" resultType="com.naruto.mybatis.model.pojo.Emp">-->
    <!--        select *-->
    <!--        from t_emp-->
    <!--        where-->
    <!--        <if test="name != null">-->
    <!--            emp_name = #{name}-->
    <!--        </if>-->
    <!--        <if test="salary != null">-->
    <!--            and emp_salary = #{salary}-->
    <!--        </if>-->
    <!--    </select>-->

    <!--    第一种动态方式 , 两者null，会全部查询出来 -->
    <!--    <select id="getEmpByNameAndSalary" resultType="com.naruto.mybatis.model.pojo.Emp">-->
    <!--        select *-->
    <!--        from t_emp-->
    <!--        where 1 = 1-->
    <!--        <if test="name != null">-->
    <!--            and emp_name = #{name}-->
    <!--        </if>-->
    <!--        <if test="salary != null">-->
    <!--            and emp_salary = #{salary}-->
    <!--        </if>-->
    <!--    </select>-->

    <!--    第二种方式 使用<where>标签-->
    <select id="getEmpByNameAndSalary" resultType="com.naruto.mybatis.model.pojo.Emp">
        select *
        from t_emp
        <where>
            <if test="name != null">
                and emp_name = #{name}
            </if>
            <if test="salary != null">
                and emp_salary = #{salary}
            </if>
        </where>
    </select>


    <!--    <set>标签 -->
    <!--    <update id="updateEmp">-->
    <!--        update t_emp-->
    <!--        <set>-->
    <!--            <if test="empName != null">-->
    <!--                emp_name =#{empName},-->
    <!--            </if>-->
    <!--            <if test="empSalary != null">-->
    <!--                emp_salary=#{empSalary},-->
    <!--            </if>-->
    <!--            <if test="age != null">-->
    <!--                age=#{age}-->
    <!--            </if>-->
    <!--        </set>-->
    <!--        where id = #{id}-->
    <!--    </update>-->


    <!--
         prefix: 前缀; 如何标签体中有东西，就给它们拼一个前缀
         prefixOverrides: 前缀覆盖；标签体中最终生成的字符串，如果以指定前缀开始，就覆盖成空串
         suffix: 后缀
         suffixOverrides: 后缀覆盖
    -->
    <select id="getEmpByNameAndSalaryAndAge" resultType="com.naruto.mybatis.model.pojo.Emp">
        select *
        from t_emp
        <trim prefix="where" prefixOverrides="and|or">
            <if test="name != null">
                emp_name = #{name}
            </if>
            <if test="salary != null">
                and emp_salary = #{salary}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
        </trim>
    </select>
    <select id="getEmpByNameAndSalaryWhen" resultType="com.naruto.mybatis.model.pojo.Emp">
        select *
        from t_emp
        <where>
            <choose>
                <when test="name != null">
                    emp_name= #{name}
                </when>
                <when test="salary > 3000">
                    emp_salary = #{salary}
                </when>
                <otherwise>
                    id = 1
                </otherwise>
            </choose>
        </where>
    </select>

    <!--  for(Integer id :ids)

        foreach: 遍历List,Set,Map,数组
        collection：指定要遍历的集合名
        item：将当前遍历出的元素赋值给指定的变量
        separator：指定在每次遍历时，元素之间拼接的分隔符
        open：遍历开始前缀； 不开始遍历就不会有这个
        close：遍历结束后缀
-->
    <select id="getEmpByIds" resultType="com.naruto.mybatis.model.pojo.Emp">
        select * from t_emp
        <if test="empIds != null">
            <where>
                <foreach collection="empIds" item="id" open="id in (" close=")" separator=",">
                    #{id}
                </foreach>
            </where>
        </if>
    </select>

    <update id="updateEmp">
        update t_emp
        <trim prefix="set" suffixOverrides=",">
            <if test="empName != null">
                emp_name =#{empName},
            </if>
            <if test="empSalary != null">
                emp_salary=#{empSalary},
            </if>
            <if test="age != null">
                age=#{age}
            </if>
        </trim>
        where id = #{id}
    </update>

</mapper>